--- 
alertmanager: 
  alertmanagerSpec: 
    resources: 
      limits: 
        cpu: 100m
        memory: 50Mi
      requests: 
        cpu: 10m
        memory: 50Mi
defaultRules: 
  rules: 
    etcd: false
grafana: 
  grafana.ini: 
    auth.basic: 
      enabled: false
    auth.proxy: 
      auto-sign-up: true
      enabled: true
      header_name: X-Forwarded-User
    server: 
      enable_gzip: true
      protocol: http
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/ops/portal/grafana"
    users: 
      auto_assign_org_role: Admin
  livenessProbe: 
    failureThreshold: 10
    httpGet: 
      path: /api/health
      port: 3000
      scheme: HTTP
    initialDelaySeconds: 60
    timeoutSeconds: 30
  plugins: 
    - grafana-piechart-panel
  rbac: 
    pspUseAppArmor: false
  readinessProbe: 
    httpGet: 
      path: /api/health
      port: 3000
      scheme: HTTP
  resources: 
    limits: 
      cpu: 300m
      memory: 100Mi
    requests: 
      cpu: 200m
      memory: 100Mi
  service: 
    port: 3000
    type: ClusterIP
kubeEtcd: 
  enabled: true
  serviceMonitor: 
    caFile: /etc/prometheus/secrets/etcd-certs/ca.crt
    certFile: /etc/prometheus/secrets/etcd-certs/server.crt
    keyFile: /etc/prometheus/secrets/etcd-certs/server.key
    scheme: https
mesosphereResources: 
  create: true
  rules: 
    etcd: true
  dashboards:
    apiserver: true
    controlmanager: true
    elasticsearch: true
    fluentbit: true
    grafana: true
    opsportal: true
    kubelet: true
    localvolumeprovisioner: true
    localvolumeusage: true
    prometheusoverview: true
    scheduler: true
    traefik: true
prometheus: 
  additionalServiceMonitors: 
    - 
      endpoints: 
        - 
          interval: 30s
          port: metrics
      name: kubeaddons-service-monitor-metrics
      namespaceSelector: 
        matchNames: 
          - kubeaddons
          - kommander
      selector: 
        matchLabels: 
          servicemonitor.kubeaddons.mesosphere.io/path: metrics
    - 
      endpoints: 
        - 
          interval: 30s
          path: /api/v1/metrics/prometheus
          port: metrics
      name: kubeaddons-service-monitor-api-v1-metrics-prometheus
      namespaceSelector: 
        matchNames: 
          - kubeaddons
      selector: 
        matchLabels: 
          servicemonitor.kubeaddons.mesosphere.io/path: api__v1__metrics__prometheus
  prometheusSpec: 
    additionalScrapeConfigs: 
      - 
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes-containerd
        kubernetes_sd_configs: 
          - 
            role: node
        metrics_path: /v1/metrics
        relabel_configs: 
          - 
            regex: "(.*):10250"
            replacement: "${1}:1338"
            source_labels: 
              - __address__
            target_label: __address__
        tls_config: 
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - 
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-calico-node
        kubernetes_sd_configs: 
          - 
            namespaces: 
              names: 
                - kube-system
            role: pod
        metrics_path: /metrics
        relabel_configs: 
          - 
            action: keep
            regex: calico-node
            source_labels: 
              - __meta_kubernetes_pod_label_k8s_app
          - 
            action: keep
            regex: .*metrics
            source_labels: 
              - __meta_kubernetes_pod_container_port_name
          - 
            action: replace
            source_labels: 
              - __meta_kubernetes_pod_label_k8s_app
            target_label: name
          - 
            action: replace
            source_labels: 
              - __meta_kubernetes_pod_container_port_name
            target_label: endpoint
          - 
            action: replace
            source_labels: 
              - __meta_kubernetes_pod_node_name
            target_label: node
          - 
            action: replace
            source_labels: 
              - __meta_kubernetes_pod_name
            target_label: pod
          - 
            action: replace
            source_labels: 
              - __meta_kubernetes_namespace
            target_label: namespace
        tls_config: 
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    enableAdminAPI: true
    externalUrl: /ops/portal/prometheus
    resources: 
      limits: 
        cpu: 1000m
        memory: 2000Mi
      requests: 
        cpu: 200m
        memory: 1000Mi
    secrets: 
      - etcd-certs
    storageSpec: 
      volumeClaimTemplate: 
        metadata: 
          name: db
        spec: 
          accessModes: 
            - ReadWriteOnce
          resources: 
            requests: 
              storage: 50Gi

